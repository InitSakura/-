#include<cstdio>
#include<cctype>

using namespace std;

const int N = 1 << 17 | 1, mod = 998244353;

int A[N], B[N], a[N], b[N], n;

inline void init() {
	for(int i = 0; i < n; i++) a[i] = A[i], b[i] = B[i];
}

inline void Print() {
	for(int i = 0; i < n - 1; i++)
		printf("%d ", a[i]);
	printf("%d\n", a[n - 1]);
}

inline void merge() {
	for(int i = 0; i < n; i++) a[i] = 1ll * a[i] * b[i] % mod;
}

inline void OR(int *f, int x) {
	for(int o = 2, k = 1; o <= n; o <<= 1, k <<= 1)
		for(int i = 0; i < n; i += o)
			for(int j = 0; j < k; j++)
				f[i + j + k] = (f[i + j + k] + 1ll * f[i + j] * x % mod) % mod;
}

inline void AND(int *f, int x) {
	for(int o = 2, k = 1; o <= n; o <<= 1, k <<= 1)
		for(int i = 0; i < n; i += o)
			for(int j = 0; j < k; j++)
				f[i + j] = (f[i + j] + 1ll * f[i + j + k] * x % mod) % mod;
}

inline void XOR(int *f, int x) {
	for(int o = 2, k = 1; o <= n; o <<= 1, k <<= 1)
		for(int i = 0; i < n; i += o)
			for(int j = 0; j < k; j++) {
				f[i + j] = (1ll * f[i + j] + f[i + j + k]) % mod;
				f[i + j + k] = (f[i + j] - f[i + j + k] - f[i + j + k]) % mod;
				if(f[i + j + k] < 0) f[i + j + k] += mod;
				f[i + j] = 1ll * f[i + j] * x % mod, f[i + j + k] = 1ll * f[i + j + k] * x % mod;
			}
}

inline int read() {
	int x = 0, f = 1, c = getchar();
	for(; !isdigit(c); c = getchar())
		if(c == '-')
			f = -1;
	for(; isdigit(c); c = getchar())
		x = x * 10 + c - 48;
	return x * f;
}

int main() {
	n = read();
	n = 1 << n;
	for(int i = 0; i < n; i++) A[i] = read();
	for(int i = 0; i < n; i++) B[i] = read();
	init(); OR(a, 1); OR(b, 1); merge(); OR(a, mod - 1); Print();
	init(); AND(a, 1); AND(b, 1); merge(); AND(a, mod - 1); Print();
	init(); XOR(a, 1); XOR(b, 1); merge(); XOR(a, (mod + 1) >> 1); Print();
	return 0;
}
